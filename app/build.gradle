apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'project-report'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    // Manifest version information!
    def versionMajor = 1
    def versionMinor = 0
    def versionPatch = 0
    def buildSuffix = "a"

    defaultConfig {
        applicationId "com.cabbage.scaffold"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode = (versionMajor * 10 + versionMinor) * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    def keyStorePath = System.getenv("ANDROID_KEYSTORE_PATH")
    keyStorePath = keyStorePath == null ? "C:/KeyStore/" : keyStorePath

    print keyStorePath
    File propsFile = new File(keyStorePath + 'key_props_leo.txt')
    def localKeyStore = propsFile.exists()

    if (localKeyStore) {
        println 'Using local key store'
        def props = new Properties()
        props.load(new FileInputStream(propsFile))

        def debugConfigName = 'debug'
        def releaseConfigName = 'release'

        signingConfigs {
            debug {
                storeFile = file(keyStorePath + props[debugConfigName + 'StoreFile'])
                storePassword = props[debugConfigName + 'StorePassword']
                keyAlias = props[debugConfigName + 'KeyAlias']
                keyPassword = props[debugConfigName + 'KeyPassword']
            }

            release {
                storeFile = file(keyStorePath + props[releaseConfigName + 'StoreFile'])
                storePassword = props[releaseConfigName + 'StorePassword']
                keyAlias = props[releaseConfigName + 'KeyAlias']
                keyPassword = props[releaseConfigName + 'KeyPassword']

            }
        }
    }


    buildTypes {
        debug {
            debuggable true
            versionNameSuffix "debug_"+buildSuffix

            if (localKeyStore) signingConfig signingConfigs.debug
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (localKeyStore) signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

final support_library_version = '25.3.1'
final dagger_version = '2.11'
final butter_knife_version = '8.6.0'
final dart_version = '2.0.+'
final timber_version = '4.5.1'

final rx_java_version = '2.1.0'
final rx_android_version = '2.0.1'
final rx_kotlin_version = '2.0.3'
final rx_permission = '0.9.4@aar'
final rx_binding = '2.0.0'
final rx_preferences = '2.0.0-RC2'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    compile "com.android.support:design:$support_library_version"

    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    // ReactiveX
    compile "io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version"
    compile "io.reactivex.rxjava2:rxjava:$rx_java_version"
    compile "io.reactivex.rxjava2:rxandroid:$rx_android_version"

    compile "com.tbruyelle.rxpermissions2:rxpermissions:$rx_permission"
    compile "com.jakewharton.rxbinding2:rxbinding:$rx_binding"
    compile "com.f2prateek.rx.preferences2:rx-preferences:$rx_preferences"

    // Dagger 2
    compile "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Butter Knife
    compile "com.jakewharton:butterknife:$butter_knife_version"
    kapt "com.jakewharton:butterknife-compiler:$butter_knife_version"

    // Dart
    compile "com.f2prateek.dart:dart:$dart_version"
    provided "com.f2prateek.dart:dart-processor:$dart_version"

    // Timber
    compile "com.jakewharton.timber:timber:$timber_version"

    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

}
buildscript {
}
